version: "3.2"

services:
  flask-project:
    restart: always
    container_name: flask-project
    build: 
      context: ./server
    ports:
      - "5000:5000"

  react-project:
    restart: always
    container_name: react-project
    build:
      context: ./client
    depends_on:
      - flask-project
    ports:
      - "3000:3000"
    expose:
      - 3000
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    depends_on:
      - react-project
    command:
      - '-port=8098'
    ports:
      - "8098:8080"
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - react-project
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/data:/var/lib/grafana
    user: "1000"
    depends_on:
      - prometheus
    ports:
      - '3002:3000'